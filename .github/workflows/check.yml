###############################################################################
# RELEASE
###############################################################################

name: ‚úÖ Tests and check for updates

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  GITHUB_TOKEN: ${{ github.token }}
  NPM_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
permissions:
  contents: write
  pull-requests: write

###############################################################################
# JOBS
###############################################################################

jobs:
  checks:
    runs-on: macos-latest
    steps:

      #########################################################################
      # INIT
      #########################################################################

      - name: ‚¨áÔ∏èüõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
      - name: ‚¨áÔ∏èüõé Checkout
        uses: actions/checkout@v4
      - name: ‚¨áÔ∏èü•° Install pnpm
        uses: pnpm/action-setup@v4
      - name: ‚¨áÔ∏èüü¢ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 23.6.0
          cache: 'pnpm'

      - name: üêôüò∫ Check GitHub API Rate Limit
        id: rate_limit
        run: |
          response=$(gh api rate_limit)
          limit=$(echo $response | jq -r '.resources.core.limit')
          remaining=$(echo $response | jq -r '.resources.core.remaining')
          echo "GitHub API Rate Limit: $remaining/$limit"

          if [ "$remaining" -lt 10 ]; then
              exit 1
          fi
        env:
            GH_TOKEN: ${{ env.GITHUB_TOKEN }}

    ############################### W ALL DEPS ################################
    #   - name: üõ† Install System Dependencies for canvas and imagemin npm deps
    #     run: |
    #       sudo apt-get update
    #       sudo apt-get install -y \
    #         build-essential \
    #         libcairo2-dev \
    #         libpango1.0-dev \
    #         libjpeg-dev \
    #         libgif-dev \
    #         librsvg2-dev \
    #         libpng-dev \
    #         zlib1g-dev \
    #         libimagequant-dev \
    #         nasm
    #   - name: ‚¨áÔ∏èüì¶ Install dependencies
    #     run: |
    #        export npm_config_build_from_source=false
    #        pnpm install --no-frozen-lockfile

      - name: ‚¨áÔ∏èüì¶ Install dependencies
        run: |
           export npm_config_build_from_source=false
           pnpm install --no-frozen-lockfile --ignore-scripts

    #   - name: ‚¨áÔ∏èüåê Install Playwright Browsers
    #     run: pnpx playwright install --with-deps

      #########################################################################
      # BUILD
      #########################################################################

      - name: üèó Build packages
        run: pnpm build && pnpm build-bin

      #########################################################################
      # TEST
      #########################################################################

      - name: ‚úÖ Run [e2e & unit] tests
        run: pnpm test

      #########################################################################
      # EXIT IF IS PULL REQUEST
      #########################################################################

      - name: üö™ Exit here if is pull request
        if: github.event_name == 'pull_request'
        run: |
          echo "Pull request detected, exiting..."
          exit 0
        env:
          GITHUB_TOKEN: ${{env.GITHUB_TOKEN }}

      #########################################################################
      #########################################################################
      # UPDATE VERSIONS
      #########################################################################
      #########################################################################

      - name: üì£ Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          title: "chore(release): version packages ü¶ã"
          version: pnpm . pkg version --silent
          publish: pnpm . pkg publish --silent
          commit: "chore(release): version packages ü¶ã [skip ci]"
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ env.NPM_TOKEN }}

      - name: Get updated versions if exists
        id: updated
        run: |
          core_version=$(echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[] | select(.name == "umac") | .version')
          core_version_major=${core_version%%.*}
          echo Set changesets outputs
          echo '${{ toJSON(steps.changesets.outputs) }}'
          echo Set updated versions
          echo "core_version=$core_version" >> $GITHUB_OUTPUT
          echo "core_version_major=$core_version_major" >> $GITHUB_OUTPUT

      - name: Add core version TAG to Github
        if: steps.updated.outputs.core_version != ''
        uses: richardsimko/update-tag@v1
        with:
          tag_name: ${{steps.updated.outputs.core_version}}
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

      - name: ‚ÑπÔ∏è‚û°Ô∏è Check for changes in package.json
        run: |
          git fetch origin main
          git diff --name-only HEAD origin/main | grep 'package.json' || echo "No changes in package.json"
        continue-on-error: true
        id: check_package_json

      #########################################################################
      # CALL TO WORKFLOWS
      #########################################################################

      - name: ‚ÑπÔ∏èüêôüò∫‚û°Ô∏è Update repo info
        if: steps.check_package_json.outputs.stdout != 'No changes in package.json'
        run: pnpm . gh info update
        continue-on-error: true

      - name: Release binary 
        if: ${{ steps.updated.outputs.core_version != '' }}
        uses: ncipollo/release-action@v1
        with: 
          tag: "v${{ steps.updated.outputs.core_version }}"
          draft: false
          prerelease: false
          allowUpdates: true
          artifacts: "packages/umac/build/compress/*"
          omitBodyDuringUpdate: true

###############################################################################
